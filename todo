## Todo list ##

[ ] champion
	[ ] find a "majestuous, epic and glorious" name

[ ] asm
	[ ] Define t_op struct model
	[ ] Thinking about match instruction and model (check control)

[ ] corewar

## ASM ##
Parthing
Writing


## Corewar ##

Initialisation:
	Init new fresh memory VM
	Handle argv in coreware initiation
		Handle options
		Check syntax
			Check conflicts
	Handle champions
		Parse champions
			IF not enough data (prog missing / too large) return error
			ELSE put champion at the right place in VM
	Destroy memory VM


init next_cycle_to_die = 0 + CYCLE_TO_DIE
max_check = 0 + CYCLE_TO_DIE * MAX_CHECK 

Boucle:
	if next_cycle_to_die == cycle
		verif live
	if max chek == cycle
		CYCLE_TO_DIE -= CYCLE_DELTA
		max_check = CYCLE_TO_DIE * MAX_CHECK
	if nbr_cycle == cycle
		end of game
	launch processes

verif live:
	kill processes whith no live
	coutn and put to zero all procees live
	if no more process 
[ ]		end of game
	if nbrlive < NBR_LIVE
		CYCLE_TO_DIE -= CYCLE_DELTA
		max_check = CYCLE_TO_DIE * MAX_CHECK
	next_cycle_to_die = cycle + CYCLE_TO_DIE

launch processes:
	for all process
		if process.next_cycle == cycle
			process

process:
	call function of octet currnetly under pc
	incremente process.next_cycle
